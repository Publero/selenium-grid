#!/bin/bash

PID_FILE="/run/selenium-node.pid"
LOG_FILE="/var/log/selenium-server-node.log"
JAR_FILE="/usr/share/selenium/selenium-server-standalone.jar"
CONFIG_FILE="/etc/selenium/node.json"

VNC_LOG_FILE="/var/log/x11vnc.log"
VNC_PID_FILE="/run/x11vnc.pid"

start() {
  if [ -f "$PID_FILE" ]; then
    echo "already started"
  else
    echo "Starting Selenium server in Node mode"
    Xvfb -fp /usr/share/fonts/X11/misc/ :22 -screen 0 1280x1024x24 < /dev/null >> "$LOG_FILE" 2>&1 &
    x11vnc -display :22 < /dev/null >> "$VNC_LOG_FILE" 2>&1 &
    echo $! > "$VNC_PID_FILE"
    export DISPLAY=:22
    java -jar "$JAR_FILE" -role node -nodeConfig "$CONFIG_FILE" < /dev/null >> "$LOG_FILE" 2>&1 &
    echo $! > "$PID_FILE"
  fi
}

stop() {
  if [ -f "$VNC_PID_FILE" ]; then
    echo "Stopping x11vnc"
    PID="$(cat "$VNC_PID_FILE")"
    kill $PID < /dev/null >> "$VNC_LOG_FILE" 2>&1
    rm "$VNC_PID_FILE"
  fi
  if [ -f "$PID_FILE" ]; then
    echo "Stopping Selenium server in Node mode"
    PID="$(cat "$PID_FILE")"
    kill $PID < /dev/null >> "$LOG_FILE" 2>&1
    kill `ps -eo pid,args  | grep "Xvfb.*:22" | grep -v grep| awk '{ print $1 }'` < /dev/null >> "$LOG_FILE" 2>&1
    rm "$PID_FILE"
  else
    echo "not running"
  fi
}

restart() {
  stop
  start
}

case $1 in
start)
  start
;;
stop)
  stop
;;
restart)
  restart
;;
*)

echo "Usage: $0 {start|stop|restart}"
exit 1
esac

exit 0  
